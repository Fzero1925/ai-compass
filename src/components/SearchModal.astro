---
// Search Modal Component using Pagefind
---

<div id="search-modal" class="fixed inset-0 z-50 hidden bg-black bg-opacity-50 backdrop-blur-sm">
  <div class="flex items-center justify-center min-h-screen p-4">
    <div class="bg-white rounded-xl shadow-2xl w-full max-w-2xl max-h-[80vh] overflow-hidden">
      <!-- Header -->
      <div class="flex items-center justify-between p-4 border-b border-gray-200">
        <h2 class="text-lg font-semibold text-gray-900">搜索 AI 工具</h2>
        <button 
          id="close-search" 
          class="p-2 text-gray-400 hover:text-gray-600 rounded-lg hover:bg-gray-100 transition-colors"
        >
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>
      
      <!-- Search Content -->
      <div class="p-4">
        <div id="search-container" class="w-full">
          <!-- Pagefind UI will be inserted here -->
        </div>
      </div>
      
      <!-- Tips -->
      <div class="px-4 pb-4">
        <div class="text-xs text-gray-500 flex flex-wrap gap-4">
          <span>💡 搜索工具名称、功能或分类</span>
          <span>⚡ 按 ESC 关闭搜索</span>
        </div>
      </div>
    </div>
  </div>
</div>

<style>
  /* Custom Pagefind UI styles */
  #search-container .pagefind-ui {
    --pagefind-ui-scale: 1;
    --pagefind-ui-primary: #0284c7;
    --pagefind-ui-text: #374151;
    --pagefind-ui-background: #ffffff;
    --pagefind-ui-border: #e5e7eb;
    --pagefind-ui-border-width: 1px;
    --pagefind-ui-border-radius: 8px;
    --pagefind-ui-font: 'Inter', system-ui, sans-serif;
  }

  #search-container .pagefind-ui__search-input {
    font-size: 16px;
    padding: 12px 16px;
    border: 2px solid var(--pagefind-ui-border);
    border-radius: var(--pagefind-ui-border-radius);
    width: 100%;
  }

  #search-container .pagefind-ui__search-input:focus {
    border-color: var(--pagefind-ui-primary);
    outline: none;
    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
  }

  #search-container .pagefind-ui__result {
    padding: 16px;
    border: 1px solid var(--pagefind-ui-border);
    border-radius: var(--pagefind-ui-border-radius);
    margin-bottom: 12px;
    background: var(--pagefind-ui-background);
    transition: all 0.2s ease;
  }

  #search-container .pagefind-ui__result:hover {
    border-color: var(--pagefind-ui-primary);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  }

  #search-container .pagefind-ui__result-title {
    font-size: 18px;
    font-weight: 600;
    color: var(--pagefind-ui-primary);
    margin-bottom: 8px;
  }

  #search-container .pagefind-ui__result-excerpt {
    color: var(--pagefind-ui-text);
    line-height: 1.5;
  }
</style>

<script>
  // Initialize search functionality
  document.addEventListener('DOMContentLoaded', async () => {
    // Lazy load Pagefind
    const { PagefindUI } = await import('@pagefind/default-ui');
    
    // Initialize Pagefind UI
    const pagefind = new PagefindUI({
      element: '#search-container',
      showImages: false,
      showSubResults: true,
      excerptLength: 150,
      resetStyles: false,
      translations: {
        placeholder: '搜索 AI 工具...',
        clear_search: '清除搜索',
        load_more: '加载更多',
        search_label: '在此搜索',
        filters_label: '筛选',
        zero_results: '没有找到相关工具',
        many_results: '找到 [COUNT] 个工具',
        one_result: '找到 [COUNT] 个工具',
        alt_search: '没有找到相关工具',
        search_suggestion: '尝试搜索其他关键词',
        searching: '搜索中...'
      }
    });

    // Modal controls
    const searchModal = document.getElementById('search-modal');
    const closeButton = document.getElementById('close-search');
    
    // Open search modal
    window.openSearch = () => {
      searchModal?.classList.remove('hidden');
      const searchInput = searchModal?.querySelector('input[type="search"]');
      setTimeout(() => searchInput?.focus(), 100);
    };
    
    // Close search modal
    const closeSearch = () => {
      searchModal?.classList.add('hidden');
    };
    
    closeButton?.addEventListener('click', closeSearch);
    
    // Close on ESC key
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape') {
        closeSearch();
      }
    });
    
    // Close on backdrop click
    searchModal?.addEventListener('click', (e) => {
      if (e.target === searchModal) {
        closeSearch();
      }
    });
    
    // Global search shortcut (Ctrl/Cmd + K)
    document.addEventListener('keydown', (e) => {
      if ((e.ctrlKey || e.metaKey) && e.key === 'k') {
        e.preventDefault();
        window.openSearch();
      }
    });
  });
</script>