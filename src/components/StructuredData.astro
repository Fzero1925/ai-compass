---
export interface Props {
  type: 'website' | 'product' | 'organization' | 'breadcrumblist' | 'article' | 'itemlist';
  data: any;
}

const { type, data } = Astro.props;

let structuredData;

switch (type) {
  case 'website':
    structuredData = {
      "@context": "https://schema.org",
      "@type": "WebSite",
      "name": data.name,
      "url": data.url,
      "description": data.description,
      "publisher": {
        "@type": "Organization",
        "name": "AI Compass",
        "url": data.url
      },
      "potentialAction": {
        "@type": "SearchAction",
        "target": {
          "@type": "EntryPoint",
          "urlTemplate": `${data.url}/search?q={search_term_string}`
        },
        "query-input": "required name=search_term_string"
      }
    };
    break;
    
  case 'product':
    structuredData = {
      "@context": "https://schema.org",
      "@type": "SoftwareApplication",
      "name": data.name,
      "description": data.description,
      "url": data.url,
      "applicationCategory": "AI工具",
      "operatingSystem": data.operatingSystem || "Web Browser",
      "price": data.price || "0",
      "priceCurrency": "CNY",
      "aggregateRating": {
        "@type": "AggregateRating",
        "ratingValue": data.rating,
        "reviewCount": data.reviewCount,
        "bestRating": "5",
        "worstRating": "1"
      },
      "offers": {
        "@type": "Offer",
        "price": data.price || "0",
        "priceCurrency": "CNY",
        "availability": "https://schema.org/InStock"
      }
    };
    break;
    
  case 'organization':
    structuredData = {
      "@context": "https://schema.org",
      "@type": "Organization",
      "name": data.name,
      "url": data.url,
      "logo": data.logo,
      "description": data.description,
      "sameAs": data.sameAs || []
    };
    break;
    
  case 'breadcrumblist':
    structuredData = {
      "@context": "https://schema.org",
      "@type": "BreadcrumbList",
      "itemListElement": data.items.map((item: any, index: number) => ({
        "@type": "ListItem",
        "position": index + 1,
        "name": item.name,
        "item": item.url
      }))
    };
    break;
    
  case 'article':
    structuredData = {
      "@context": "https://schema.org",
      "@type": "TechArticle",
      "headline": data.headline,
      "description": data.description,
      "image": data.image,
      "author": {
        "@type": "Organization",
        "name": data.author?.name || "AI Compass Team",
        "url": "https://fzero1925.github.io/ai-compass"
      },
      "publisher": {
        "@type": "Organization",
        "name": "AI Compass",
        "logo": {
          "@type": "ImageObject",
          "url": "https://fzero1925.github.io/ai-compass/favicon.svg",
          "width": "60",
          "height": "60"
        },
        "url": "https://fzero1925.github.io/ai-compass"
      },
      "datePublished": data.datePublished,
      "dateModified": data.dateModified || data.datePublished,
      "mainEntityOfPage": {
        "@type": "WebPage",
        "@id": data.mainEntityOfPage?.['@id']
      },
      "keywords": data.keywords,
      "articleSection": data.articleSection,
      "wordCount": data.wordCount,
      "about": {
        "@type": "Thing",
        "name": data.articleSection
      },
      "inLanguage": "zh-CN"
    };
    break;
    
  case 'itemlist':
    structuredData = {
      "@context": "https://schema.org",
      "@type": "ItemList",
      "name": data.name,
      "description": data.description,
      "numberOfItems": data.items.length,
      "itemListElement": data.items.map((item: any, index: number) => ({
        "@type": "ListItem",
        "position": index + 1,
        "item": {
          "@type": "TechArticle",
          "name": item.name,
          "url": item.url,
          "description": item.description,
          "datePublished": item.datePublished,
          "author": {
            "@type": "Organization",
            "name": "AI Compass Team"
          },
          "publisher": {
            "@type": "Organization",
            "name": "AI Compass"
          }
        }
      }))
    };
    break;
    
  default:
    structuredData = data;
}
---

<script type="application/ld+json" set:html={JSON.stringify(structuredData)}></script>