---
import BaseLayout from '../../layouts/BaseLayout.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import ArticleCard from '../../components/ArticleCard.astro';
import SearchModal from '../../components/SearchModal.astro';
import StructuredData from '../../components/StructuredData.astro';
import { getLatestArticles, articleCategories } from '../../data/articles';

const allArticles = getLatestArticles();
const categories = Object.entries(articleCategories);

const pageTitle = "全部文章 - AI Compass";
const pageDescription = "浏览AI Compass的全部文章，包括AI工具评测、使用教程、行业洞察和工具对比分析。";
---

<BaseLayout title={pageTitle} description={pageDescription}>
  <!-- Search data -->
  <div data-pagefind-body data-pagefind-meta="title:文章大全" data-pagefind-meta="type:文章列表" style="display: none;">
    AI工具文章大全 专业评测 使用教程 行业洞察 工具对比 {allArticles.map(a => a.title).join(' ')}
  </div>
  
  <Header />
  
  <main>
    <!-- Breadcrumb -->
    <section class="bg-gray-50 py-4">
      <div class="max-w-6xl mx-auto px-4 sm:px-6">
        <nav class="flex items-center space-x-2 text-sm text-gray-600">
          <a href="/" class="hover:text-primary-600 transition-colors">首页</a>
          <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 111.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"></path>
          </svg>
          <span class="text-gray-900 font-medium">全部文章</span>
        </nav>
      </div>
    </section>

    <!-- Header Section -->
    <section class="py-12 bg-gradient-to-br from-primary-50 via-white to-secondary-50">
      <div class="max-w-6xl mx-auto px-4 sm:px-6 text-center">
        <h1 class="text-3xl sm:text-4xl lg:text-5xl font-bold text-gray-900 mb-6">
          全部文章
        </h1>
        <p class="text-xl text-gray-600 mb-8 max-w-3xl mx-auto">
          深度AI工具评测、实用教程和行业洞察，帮你掌握AI工具的最新动态
        </p>
        
        <!-- Search Bar -->
        <div class="max-w-xl mx-auto mb-8">
          <div class="relative">
            <button 
              onclick="openSearch()"
              class="w-full pl-12 pr-4 py-3 text-lg border border-gray-300 rounded-xl hover:border-primary-300 focus:ring-2 focus:ring-primary-500 focus:border-transparent transition-all text-left text-gray-500 hover:text-gray-700"
            >
              搜索文章内容...
              <span class="float-right text-sm text-gray-400 mt-1">Ctrl+K</span>
            </button>
            <div class="absolute inset-y-0 left-0 pl-4 flex items-center pointer-events-none">
              <svg class="w-6 h-6 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
              </svg>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- Categories Filter -->
    <section class="py-8 bg-white border-b border-gray-200">
      <div class="max-w-6xl mx-auto px-4 sm:px-6">
        <div class="flex flex-wrap gap-3 justify-center">
          <button 
            class="filter-btn active px-4 py-2 rounded-full text-sm font-medium border-2 transition-all" 
            data-category="all"
          >
            全部 ({allArticles.length})
          </button>
          {categories.map(([key, info]) => {
            const count = allArticles.filter(article => article.category === key).length;
            return (
              <button 
                class="filter-btn px-4 py-2 rounded-full text-sm font-medium border-2 transition-all" 
                data-category={key}
              >
                {info.icon} {info.name} ({count})
              </button>
            );
          })}
        </div>
      </div>
    </section>

    <!-- Articles Grid -->
    <section class="py-16">
      <div class="max-w-6xl mx-auto px-4 sm:px-6">
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8" id="articles-grid">
          {allArticles.map(article => (
            <div class="article-item" data-category={article.category}>
              <ArticleCard {...article} />
            </div>
          ))}
        </div>
        
        <!-- Empty State -->
        <div id="empty-state" class="text-center py-16 hidden">
          <svg class="mx-auto h-24 w-24 text-gray-300" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
          </svg>
          <h3 class="mt-4 text-lg font-medium text-gray-900">暂无相关文章</h3>
          <p class="mt-2 text-gray-500">该分类下暂时没有文章，请选择其他分类查看</p>
        </div>
      </div>
    </section>
  </main>
  
  <Footer />
  <SearchModal />
  
  <!-- Structured Data for Article List -->
  <StructuredData 
    type="itemlist" 
    data={{
      name: "AI工具评测文章大全",
      description: "全面的AI工具评测、使用教程和专业分析文章集合",
      items: allArticles.map(article => ({
        name: article.title,
        url: `https://fzero1925.github.io/ai-compass/articles/${article.slug}/`,
        description: article.description,
        datePublished: article.publishDate
      }))
    }} 
  />
</BaseLayout>

<script>
  // Category filtering functionality
  document.addEventListener('DOMContentLoaded', () => {
    const filterButtons = document.querySelectorAll('.filter-btn');
    const articleItems = document.querySelectorAll('.article-item');
    const emptyState = document.getElementById('empty-state');
    const articlesGrid = document.getElementById('articles-grid');
    
    filterButtons.forEach(button => {
      button.addEventListener('click', () => {
        const category = button.getAttribute('data-category');
        
        // Update active button
        filterButtons.forEach(btn => {
          btn.classList.remove('active', 'bg-primary-600', 'text-white', 'border-primary-600');
          btn.classList.add('border-gray-300', 'text-gray-700', 'hover:bg-gray-50');
        });
        
        button.classList.add('active', 'bg-primary-600', 'text-white', 'border-primary-600');
        button.classList.remove('border-gray-300', 'text-gray-700', 'hover:bg-gray-50');
        
        // Filter articles
        let visibleCount = 0;
        articleItems.forEach(item => {
          const itemCategory = item.getAttribute('data-category');
          if (category === 'all' || itemCategory === category) {
            item.style.display = 'block';
            visibleCount++;
          } else {
            item.style.display = 'none';
          }
        });
        
        // Show/hide empty state
        if (visibleCount === 0) {
          emptyState.classList.remove('hidden');
          articlesGrid.classList.add('hidden');
        } else {
          emptyState.classList.add('hidden');
          articlesGrid.classList.remove('hidden');
        }
      });
    });
  });
</script>

<style>
  .filter-btn {
    @apply border-gray-300 text-gray-700 hover:bg-gray-50 cursor-pointer;
  }
  
  .filter-btn.active {
    @apply bg-primary-600 text-white border-primary-600;
  }
</style>